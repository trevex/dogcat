options:
  logging: CLOUD_LOGGING_ONLY

steps:
- id: 'env'
  name: 'alpine'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      echo "***********************"
      echo "Target: ${_TARGET_ENV}"
      echo "***********************"
      echo "Also plans: ${_PLAN_ENV}"
      echo "***********************"

- id: 'tf init'
  name: 'hashicorp/terraform:1.2.5'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd chapter02a
      envs="$_TARGET_ENV,$_PLAN_ENV"
      for env in $(echo $envs | tr "," "\n"); do
        if [ ! -z "${env}" ] && [ -d "environments/${env}" ]; then
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform -chdir="environments/${env}" init -no-color || exit 1
        else
          echo ""
          echo "******* Not found (or skipping empty variable): ${env} *******"
        fi
      done

- id: 'tfsec'
  name: 'aquasec/tfsec-ci:v1.26'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd chapter02a
      echo "***********************"
      echo "Running tfsec for all environments"
      echo "***********************"
      tfsec --no-color || exit 1

- id: 'tflint'
  name: 'ghcr.io/terraform-linters/tflint-bundle:v0.39.3.1'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd chapter02a
      envs="$_TARGET_ENV,$_PLAN_ENV"
      for env in $(echo $envs | tr "," "\n"); do
        if [ ! -z "${env}" ] && [ -d "environments/${env}" ]; then
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          cd "environments/${env}"
          tflint --loglevel=info --module --enable-plugin=google .
          cd ../..
        else
          echo ""
          echo "******* Not found (or skipping empty variable): ${env} *******"
        fi
      done

- id: 'checkov'
  name: 'bridgecrew/checkov:2.1.125'
  args:
  - '--directory chapter02a/'

# - id: 'tf plan'
#   name: 'hashicorp/terraform:1.2.5'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - |
#       if [ -d "environments/$BRANCH_NAME/" ]; then
#         cd environments/$BRANCH_NAME
#         terraform plan
#       else
#         for dir in environments/*/
#         do
#           cd ${dir}
#           env=${dir%*/}
#           env=${env#*/}
#           echo ""
#           echo "*************** TERRAFOM PLAN ******************"
#           echo "******* At environment: ${env} ********"
#           echo "*************************************************"
#           terraform plan || exit 1
#           cd ../../
#         done
#       fi

# - id: 'tf apply'
#   name: 'hashicorp/terraform:1.2.5'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - |
#       if [ -d "environments/$BRANCH_NAME/" ]; then
#         cd environments/$BRANCH_NAME
#         terraform apply -auto-approve
#       else
#         echo "***************************** SKIPPING APPLYING *******************************"
#         echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
#         echo "*******************************************************************************"
#       fi
