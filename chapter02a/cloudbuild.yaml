options:
  logging: CLOUD_LOGGING_ONLY

steps:
- id: 'env'
  name: 'alpine'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      echo "***********************"
      echo "Target: ${_TARGET_ENV}"
      echo "***********************"
      echo "Also plans: ${_PLAN_ENV}"
      echo "***********************"

- id: 'tf init'
  name: 'hashicorp/terraform:1.2.5'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd chapter02a
      envs="$_TARGET_ENV,$_PLAN_ENV"
      for env in $(echo $envs | tr "," "\n"); do
        if [ ! -z "${env}" ] && [ -d "environments/${env}" ]; then
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform -chdir="environments/${env}" init -no-color || exit 1
        else
          echo ""
          echo "******* Not found (or skipping empty variable): ${env} *******"
        fi
      done

- id: 'tfsec'
  name: 'aquasec/tfsec-ci:v1.26'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd chapter02a
      echo "***********************"
      echo "Running tfsec for all environments"
      echo "***********************"
      tfsec --no-color || exit 1

- id: 'tflint'
  name: 'ghcr.io/terraform-linters/tflint-bundle:v0.39.3.1'
  entrypoint: 'sh'
  env:
  - 'TFLINT_LOG=info'
  args:
  - '-c'
  - |
      cd chapter02a
      envs="$_TARGET_ENV,$_PLAN_ENV"
      for env in $(echo $envs | tr "," "\n"); do
        if [ ! -z "${env}" ] && [ -d "environments/${env}" ]; then
          echo ""
          echo "******************* TFLINT **********************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          cd "environments/${env}"
          tflint -c ../../.tflint.hcl --init . || exit 1
          tflint -c ../../.tflint.hcl . || exit 1
          cd ../..
        else
          echo ""
          echo "******* Not found (or skipping empty variable): ${env} *******"
        fi
      done

- id: 'checkov'
  name: 'bridgecrew/checkov:2.1.125'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd chapter02a
      echo "***********************"
      echo "Running checkov for all environments"
      echo "***********************"
      checkov --quiet -d . || exit 1

- id: 'tf plan'
  name: 'hashicorp/terraform:1.2.5'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd chapter02a
      envs="$_TARGET_ENV,$_PLAN_ENV"
      for env in $(echo $envs | tr "," "\n"); do
        if [ ! -z "${env}" ] && [ -d "environments/${env}" ]; then
          echo ""
          echo "*************** TERRAFORM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform -chdir="environments/${env}" plan -no-color || exit 1
        else
          echo ""
          echo "******* Not found (or skipping empty variable): ${env} *******"
        fi
      done


- id: 'tf apply'
  name: 'hashicorp/terraform:1.2.5'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      env="$_TARGET_ENV"
      if [ ! -z "${env}" ] && [ -d "environments/${env}" ]; then
        echo "*************** TERRAFORM APPLY ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        terraform -chdir="environments/${env}" apply -auto-approve -no-color || exit 1
      else
        echo ""
        echo "******* Not found (or skipping empty variable): ${env} *******"
      fi
